
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `wp_users` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model wp_users
 * 
 */
export type wp_usersModel = runtime.Types.Result.DefaultSelection<Prisma.$wp_usersPayload>

export type AggregateWp_users = {
  _count: Wp_usersCountAggregateOutputType | null
  _avg: Wp_usersAvgAggregateOutputType | null
  _sum: Wp_usersSumAggregateOutputType | null
  _min: Wp_usersMinAggregateOutputType | null
  _max: Wp_usersMaxAggregateOutputType | null
}

export type Wp_usersAvgAggregateOutputType = {
  ID: number | null
  user_status: number | null
}

export type Wp_usersSumAggregateOutputType = {
  ID: bigint | null
  user_status: bigint | null
}

export type Wp_usersMinAggregateOutputType = {
  ID: bigint | null
  user_login: string | null
  user_pass: string | null
  user_nicename: string | null
  user_email: string | null
  user_url: string | null
  user_registered: Date | null
  user_activation_key: string | null
  user_status: bigint | null
  display_name: string | null
}

export type Wp_usersMaxAggregateOutputType = {
  ID: bigint | null
  user_login: string | null
  user_pass: string | null
  user_nicename: string | null
  user_email: string | null
  user_url: string | null
  user_registered: Date | null
  user_activation_key: string | null
  user_status: bigint | null
  display_name: string | null
}

export type Wp_usersCountAggregateOutputType = {
  ID: number
  user_login: number
  user_pass: number
  user_nicename: number
  user_email: number
  user_url: number
  user_registered: number
  user_activation_key: number
  user_status: number
  display_name: number
  _all: number
}


export type Wp_usersAvgAggregateInputType = {
  ID?: true
  user_status?: true
}

export type Wp_usersSumAggregateInputType = {
  ID?: true
  user_status?: true
}

export type Wp_usersMinAggregateInputType = {
  ID?: true
  user_login?: true
  user_pass?: true
  user_nicename?: true
  user_email?: true
  user_url?: true
  user_registered?: true
  user_activation_key?: true
  user_status?: true
  display_name?: true
}

export type Wp_usersMaxAggregateInputType = {
  ID?: true
  user_login?: true
  user_pass?: true
  user_nicename?: true
  user_email?: true
  user_url?: true
  user_registered?: true
  user_activation_key?: true
  user_status?: true
  display_name?: true
}

export type Wp_usersCountAggregateInputType = {
  ID?: true
  user_login?: true
  user_pass?: true
  user_nicename?: true
  user_email?: true
  user_url?: true
  user_registered?: true
  user_activation_key?: true
  user_status?: true
  display_name?: true
  _all?: true
}

export type Wp_usersAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wp_users to aggregate.
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_users to fetch.
   */
  orderBy?: Prisma.wp_usersOrderByWithRelationInput | Prisma.wp_usersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.wp_usersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned wp_users
  **/
  _count?: true | Wp_usersCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Wp_usersAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Wp_usersSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Wp_usersMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Wp_usersMaxAggregateInputType
}

export type GetWp_usersAggregateType<T extends Wp_usersAggregateArgs> = {
      [P in keyof T & keyof AggregateWp_users]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWp_users[P]>
    : Prisma.GetScalarType<T[P], AggregateWp_users[P]>
}




export type wp_usersGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.wp_usersWhereInput
  orderBy?: Prisma.wp_usersOrderByWithAggregationInput | Prisma.wp_usersOrderByWithAggregationInput[]
  by: Prisma.Wp_usersScalarFieldEnum[] | Prisma.Wp_usersScalarFieldEnum
  having?: Prisma.wp_usersScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Wp_usersCountAggregateInputType | true
  _avg?: Wp_usersAvgAggregateInputType
  _sum?: Wp_usersSumAggregateInputType
  _min?: Wp_usersMinAggregateInputType
  _max?: Wp_usersMaxAggregateInputType
}

export type Wp_usersGroupByOutputType = {
  ID: bigint
  user_login: string
  user_pass: string
  user_nicename: string
  user_email: string
  user_url: string
  user_registered: Date | null
  user_activation_key: string
  user_status: bigint
  display_name: string
  _count: Wp_usersCountAggregateOutputType | null
  _avg: Wp_usersAvgAggregateOutputType | null
  _sum: Wp_usersSumAggregateOutputType | null
  _min: Wp_usersMinAggregateOutputType | null
  _max: Wp_usersMaxAggregateOutputType | null
}

type GetWp_usersGroupByPayload<T extends wp_usersGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Wp_usersGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Wp_usersGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Wp_usersGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Wp_usersGroupByOutputType[P]>
      }
    >
  >



export type wp_usersWhereInput = {
  AND?: Prisma.wp_usersWhereInput | Prisma.wp_usersWhereInput[]
  OR?: Prisma.wp_usersWhereInput[]
  NOT?: Prisma.wp_usersWhereInput | Prisma.wp_usersWhereInput[]
  ID?: Prisma.BigIntFilter<"wp_users"> | bigint | number
  user_login?: Prisma.StringFilter<"wp_users"> | string
  user_pass?: Prisma.StringFilter<"wp_users"> | string
  user_nicename?: Prisma.StringFilter<"wp_users"> | string
  user_email?: Prisma.StringFilter<"wp_users"> | string
  user_url?: Prisma.StringFilter<"wp_users"> | string
  user_registered?: Prisma.DateTimeNullableFilter<"wp_users"> | Date | string | null
  user_activation_key?: Prisma.StringFilter<"wp_users"> | string
  user_status?: Prisma.BigIntFilter<"wp_users"> | bigint | number
  display_name?: Prisma.StringFilter<"wp_users"> | string
}

export type wp_usersOrderByWithRelationInput = {
  ID?: Prisma.SortOrder
  user_login?: Prisma.SortOrder
  user_pass?: Prisma.SortOrder
  user_nicename?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  user_url?: Prisma.SortOrder
  user_registered?: Prisma.SortOrderInput | Prisma.SortOrder
  user_activation_key?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
  display_name?: Prisma.SortOrder
}

export type wp_usersWhereUniqueInput = Prisma.AtLeast<{
  ID?: bigint | number
  AND?: Prisma.wp_usersWhereInput | Prisma.wp_usersWhereInput[]
  OR?: Prisma.wp_usersWhereInput[]
  NOT?: Prisma.wp_usersWhereInput | Prisma.wp_usersWhereInput[]
  user_login?: Prisma.StringFilter<"wp_users"> | string
  user_pass?: Prisma.StringFilter<"wp_users"> | string
  user_nicename?: Prisma.StringFilter<"wp_users"> | string
  user_email?: Prisma.StringFilter<"wp_users"> | string
  user_url?: Prisma.StringFilter<"wp_users"> | string
  user_registered?: Prisma.DateTimeNullableFilter<"wp_users"> | Date | string | null
  user_activation_key?: Prisma.StringFilter<"wp_users"> | string
  user_status?: Prisma.BigIntFilter<"wp_users"> | bigint | number
  display_name?: Prisma.StringFilter<"wp_users"> | string
}, "ID">

export type wp_usersOrderByWithAggregationInput = {
  ID?: Prisma.SortOrder
  user_login?: Prisma.SortOrder
  user_pass?: Prisma.SortOrder
  user_nicename?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  user_url?: Prisma.SortOrder
  user_registered?: Prisma.SortOrderInput | Prisma.SortOrder
  user_activation_key?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
  display_name?: Prisma.SortOrder
  _count?: Prisma.wp_usersCountOrderByAggregateInput
  _avg?: Prisma.wp_usersAvgOrderByAggregateInput
  _max?: Prisma.wp_usersMaxOrderByAggregateInput
  _min?: Prisma.wp_usersMinOrderByAggregateInput
  _sum?: Prisma.wp_usersSumOrderByAggregateInput
}

export type wp_usersScalarWhereWithAggregatesInput = {
  AND?: Prisma.wp_usersScalarWhereWithAggregatesInput | Prisma.wp_usersScalarWhereWithAggregatesInput[]
  OR?: Prisma.wp_usersScalarWhereWithAggregatesInput[]
  NOT?: Prisma.wp_usersScalarWhereWithAggregatesInput | Prisma.wp_usersScalarWhereWithAggregatesInput[]
  ID?: Prisma.BigIntWithAggregatesFilter<"wp_users"> | bigint | number
  user_login?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
  user_pass?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
  user_nicename?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
  user_email?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
  user_url?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
  user_registered?: Prisma.DateTimeNullableWithAggregatesFilter<"wp_users"> | Date | string | null
  user_activation_key?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
  user_status?: Prisma.BigIntWithAggregatesFilter<"wp_users"> | bigint | number
  display_name?: Prisma.StringWithAggregatesFilter<"wp_users"> | string
}

export type wp_usersCreateInput = {
  ID?: bigint | number
  user_login?: string
  user_pass?: string
  user_nicename?: string
  user_email?: string
  user_url?: string
  user_registered?: Date | string | null
  user_activation_key?: string
  user_status?: bigint | number
  display_name?: string
}

export type wp_usersUncheckedCreateInput = {
  ID?: bigint | number
  user_login?: string
  user_pass?: string
  user_nicename?: string
  user_email?: string
  user_url?: string
  user_registered?: Date | string | null
  user_activation_key?: string
  user_status?: bigint | number
  display_name?: string
}

export type wp_usersUpdateInput = {
  ID?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_login?: Prisma.StringFieldUpdateOperationsInput | string
  user_pass?: Prisma.StringFieldUpdateOperationsInput | string
  user_nicename?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  user_url?: Prisma.StringFieldUpdateOperationsInput | string
  user_registered?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  user_activation_key?: Prisma.StringFieldUpdateOperationsInput | string
  user_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  display_name?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_usersUncheckedUpdateInput = {
  ID?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_login?: Prisma.StringFieldUpdateOperationsInput | string
  user_pass?: Prisma.StringFieldUpdateOperationsInput | string
  user_nicename?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  user_url?: Prisma.StringFieldUpdateOperationsInput | string
  user_registered?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  user_activation_key?: Prisma.StringFieldUpdateOperationsInput | string
  user_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  display_name?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_usersCreateManyInput = {
  ID?: bigint | number
  user_login?: string
  user_pass?: string
  user_nicename?: string
  user_email?: string
  user_url?: string
  user_registered?: Date | string | null
  user_activation_key?: string
  user_status?: bigint | number
  display_name?: string
}

export type wp_usersUpdateManyMutationInput = {
  ID?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_login?: Prisma.StringFieldUpdateOperationsInput | string
  user_pass?: Prisma.StringFieldUpdateOperationsInput | string
  user_nicename?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  user_url?: Prisma.StringFieldUpdateOperationsInput | string
  user_registered?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  user_activation_key?: Prisma.StringFieldUpdateOperationsInput | string
  user_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  display_name?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_usersUncheckedUpdateManyInput = {
  ID?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_login?: Prisma.StringFieldUpdateOperationsInput | string
  user_pass?: Prisma.StringFieldUpdateOperationsInput | string
  user_nicename?: Prisma.StringFieldUpdateOperationsInput | string
  user_email?: Prisma.StringFieldUpdateOperationsInput | string
  user_url?: Prisma.StringFieldUpdateOperationsInput | string
  user_registered?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  user_activation_key?: Prisma.StringFieldUpdateOperationsInput | string
  user_status?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  display_name?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_usersCountOrderByAggregateInput = {
  ID?: Prisma.SortOrder
  user_login?: Prisma.SortOrder
  user_pass?: Prisma.SortOrder
  user_nicename?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  user_url?: Prisma.SortOrder
  user_registered?: Prisma.SortOrder
  user_activation_key?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
  display_name?: Prisma.SortOrder
}

export type wp_usersAvgOrderByAggregateInput = {
  ID?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
}

export type wp_usersMaxOrderByAggregateInput = {
  ID?: Prisma.SortOrder
  user_login?: Prisma.SortOrder
  user_pass?: Prisma.SortOrder
  user_nicename?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  user_url?: Prisma.SortOrder
  user_registered?: Prisma.SortOrder
  user_activation_key?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
  display_name?: Prisma.SortOrder
}

export type wp_usersMinOrderByAggregateInput = {
  ID?: Prisma.SortOrder
  user_login?: Prisma.SortOrder
  user_pass?: Prisma.SortOrder
  user_nicename?: Prisma.SortOrder
  user_email?: Prisma.SortOrder
  user_url?: Prisma.SortOrder
  user_registered?: Prisma.SortOrder
  user_activation_key?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
  display_name?: Prisma.SortOrder
}

export type wp_usersSumOrderByAggregateInput = {
  ID?: Prisma.SortOrder
  user_status?: Prisma.SortOrder
}



export type wp_usersSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ID?: boolean
  user_login?: boolean
  user_pass?: boolean
  user_nicename?: boolean
  user_email?: boolean
  user_url?: boolean
  user_registered?: boolean
  user_activation_key?: boolean
  user_status?: boolean
  display_name?: boolean
}, ExtArgs["result"]["wp_users"]>

export type wp_usersSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ID?: boolean
  user_login?: boolean
  user_pass?: boolean
  user_nicename?: boolean
  user_email?: boolean
  user_url?: boolean
  user_registered?: boolean
  user_activation_key?: boolean
  user_status?: boolean
  display_name?: boolean
}, ExtArgs["result"]["wp_users"]>

export type wp_usersSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  ID?: boolean
  user_login?: boolean
  user_pass?: boolean
  user_nicename?: boolean
  user_email?: boolean
  user_url?: boolean
  user_registered?: boolean
  user_activation_key?: boolean
  user_status?: boolean
  display_name?: boolean
}, ExtArgs["result"]["wp_users"]>

export type wp_usersSelectScalar = {
  ID?: boolean
  user_login?: boolean
  user_pass?: boolean
  user_nicename?: boolean
  user_email?: boolean
  user_url?: boolean
  user_registered?: boolean
  user_activation_key?: boolean
  user_status?: boolean
  display_name?: boolean
}

export type wp_usersOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"ID" | "user_login" | "user_pass" | "user_nicename" | "user_email" | "user_url" | "user_registered" | "user_activation_key" | "user_status" | "display_name", ExtArgs["result"]["wp_users"]>

export type $wp_usersPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "wp_users"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    ID: bigint
    user_login: string
    user_pass: string
    user_nicename: string
    user_email: string
    user_url: string
    user_registered: Date | null
    user_activation_key: string
    user_status: bigint
    display_name: string
  }, ExtArgs["result"]["wp_users"]>
  composites: {}
}

export type wp_usersGetPayload<S extends boolean | null | undefined | wp_usersDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$wp_usersPayload, S>

export type wp_usersCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<wp_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Wp_usersCountAggregateInputType | true
  }

export interface wp_usersDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_users'], meta: { name: 'wp_users' } }
  /**
   * Find zero or one Wp_users that matches the filter.
   * @param {wp_usersFindUniqueArgs} args - Arguments to find a Wp_users
   * @example
   * // Get one Wp_users
   * const wp_users = await prisma.wp_users.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends wp_usersFindUniqueArgs>(args: Prisma.SelectSubset<T, wp_usersFindUniqueArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Wp_users that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {wp_usersFindUniqueOrThrowArgs} args - Arguments to find a Wp_users
   * @example
   * // Get one Wp_users
   * const wp_users = await prisma.wp_users.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends wp_usersFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, wp_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wp_users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usersFindFirstArgs} args - Arguments to find a Wp_users
   * @example
   * // Get one Wp_users
   * const wp_users = await prisma.wp_users.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends wp_usersFindFirstArgs>(args?: Prisma.SelectSubset<T, wp_usersFindFirstArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wp_users that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usersFindFirstOrThrowArgs} args - Arguments to find a Wp_users
   * @example
   * // Get one Wp_users
   * const wp_users = await prisma.wp_users.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends wp_usersFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, wp_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Wp_users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usersFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Wp_users
   * const wp_users = await prisma.wp_users.findMany()
   * 
   * // Get first 10 Wp_users
   * const wp_users = await prisma.wp_users.findMany({ take: 10 })
   * 
   * // Only select the `ID`
   * const wp_usersWithIDOnly = await prisma.wp_users.findMany({ select: { ID: true } })
   * 
   */
  findMany<T extends wp_usersFindManyArgs>(args?: Prisma.SelectSubset<T, wp_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Wp_users.
   * @param {wp_usersCreateArgs} args - Arguments to create a Wp_users.
   * @example
   * // Create one Wp_users
   * const Wp_users = await prisma.wp_users.create({
   *   data: {
   *     // ... data to create a Wp_users
   *   }
   * })
   * 
   */
  create<T extends wp_usersCreateArgs>(args: Prisma.SelectSubset<T, wp_usersCreateArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Wp_users.
   * @param {wp_usersCreateManyArgs} args - Arguments to create many Wp_users.
   * @example
   * // Create many Wp_users
   * const wp_users = await prisma.wp_users.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends wp_usersCreateManyArgs>(args?: Prisma.SelectSubset<T, wp_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Wp_users and returns the data saved in the database.
   * @param {wp_usersCreateManyAndReturnArgs} args - Arguments to create many Wp_users.
   * @example
   * // Create many Wp_users
   * const wp_users = await prisma.wp_users.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Wp_users and only return the `ID`
   * const wp_usersWithIDOnly = await prisma.wp_users.createManyAndReturn({
   *   select: { ID: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends wp_usersCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, wp_usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Wp_users.
   * @param {wp_usersDeleteArgs} args - Arguments to delete one Wp_users.
   * @example
   * // Delete one Wp_users
   * const Wp_users = await prisma.wp_users.delete({
   *   where: {
   *     // ... filter to delete one Wp_users
   *   }
   * })
   * 
   */
  delete<T extends wp_usersDeleteArgs>(args: Prisma.SelectSubset<T, wp_usersDeleteArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Wp_users.
   * @param {wp_usersUpdateArgs} args - Arguments to update one Wp_users.
   * @example
   * // Update one Wp_users
   * const wp_users = await prisma.wp_users.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends wp_usersUpdateArgs>(args: Prisma.SelectSubset<T, wp_usersUpdateArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Wp_users.
   * @param {wp_usersDeleteManyArgs} args - Arguments to filter Wp_users to delete.
   * @example
   * // Delete a few Wp_users
   * const { count } = await prisma.wp_users.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends wp_usersDeleteManyArgs>(args?: Prisma.SelectSubset<T, wp_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wp_users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usersUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Wp_users
   * const wp_users = await prisma.wp_users.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends wp_usersUpdateManyArgs>(args: Prisma.SelectSubset<T, wp_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wp_users and returns the data updated in the database.
   * @param {wp_usersUpdateManyAndReturnArgs} args - Arguments to update many Wp_users.
   * @example
   * // Update many Wp_users
   * const wp_users = await prisma.wp_users.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Wp_users and only return the `ID`
   * const wp_usersWithIDOnly = await prisma.wp_users.updateManyAndReturn({
   *   select: { ID: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends wp_usersUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, wp_usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Wp_users.
   * @param {wp_usersUpsertArgs} args - Arguments to update or create a Wp_users.
   * @example
   * // Update or create a Wp_users
   * const wp_users = await prisma.wp_users.upsert({
   *   create: {
   *     // ... data to create a Wp_users
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Wp_users we want to update
   *   }
   * })
   */
  upsert<T extends wp_usersUpsertArgs>(args: Prisma.SelectSubset<T, wp_usersUpsertArgs<ExtArgs>>): Prisma.Prisma__wp_usersClient<runtime.Types.Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Wp_users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usersCountArgs} args - Arguments to filter Wp_users to count.
   * @example
   * // Count the number of Wp_users
   * const count = await prisma.wp_users.count({
   *   where: {
   *     // ... the filter for the Wp_users we want to count
   *   }
   * })
  **/
  count<T extends wp_usersCountArgs>(
    args?: Prisma.Subset<T, wp_usersCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Wp_usersCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Wp_users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Wp_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Wp_usersAggregateArgs>(args: Prisma.Subset<T, Wp_usersAggregateArgs>): Prisma.PrismaPromise<GetWp_usersAggregateType<T>>

  /**
   * Group by Wp_users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usersGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends wp_usersGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: wp_usersGroupByArgs['orderBy'] }
      : { orderBy?: wp_usersGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, wp_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the wp_users model
 */
readonly fields: wp_usersFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for wp_users.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__wp_usersClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the wp_users model
 */
export interface wp_usersFieldRefs {
  readonly ID: Prisma.FieldRef<"wp_users", 'BigInt'>
  readonly user_login: Prisma.FieldRef<"wp_users", 'String'>
  readonly user_pass: Prisma.FieldRef<"wp_users", 'String'>
  readonly user_nicename: Prisma.FieldRef<"wp_users", 'String'>
  readonly user_email: Prisma.FieldRef<"wp_users", 'String'>
  readonly user_url: Prisma.FieldRef<"wp_users", 'String'>
  readonly user_registered: Prisma.FieldRef<"wp_users", 'DateTime'>
  readonly user_activation_key: Prisma.FieldRef<"wp_users", 'String'>
  readonly user_status: Prisma.FieldRef<"wp_users", 'BigInt'>
  readonly display_name: Prisma.FieldRef<"wp_users", 'String'>
}
    

// Custom InputTypes
/**
 * wp_users findUnique
 */
export type wp_usersFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * Filter, which wp_users to fetch.
   */
  where: Prisma.wp_usersWhereUniqueInput
}

/**
 * wp_users findUniqueOrThrow
 */
export type wp_usersFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * Filter, which wp_users to fetch.
   */
  where: Prisma.wp_usersWhereUniqueInput
}

/**
 * wp_users findFirst
 */
export type wp_usersFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * Filter, which wp_users to fetch.
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_users to fetch.
   */
  orderBy?: Prisma.wp_usersOrderByWithRelationInput | Prisma.wp_usersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wp_users.
   */
  cursor?: Prisma.wp_usersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wp_users.
   */
  distinct?: Prisma.Wp_usersScalarFieldEnum | Prisma.Wp_usersScalarFieldEnum[]
}

/**
 * wp_users findFirstOrThrow
 */
export type wp_usersFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * Filter, which wp_users to fetch.
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_users to fetch.
   */
  orderBy?: Prisma.wp_usersOrderByWithRelationInput | Prisma.wp_usersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wp_users.
   */
  cursor?: Prisma.wp_usersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wp_users.
   */
  distinct?: Prisma.Wp_usersScalarFieldEnum | Prisma.Wp_usersScalarFieldEnum[]
}

/**
 * wp_users findMany
 */
export type wp_usersFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * Filter, which wp_users to fetch.
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_users to fetch.
   */
  orderBy?: Prisma.wp_usersOrderByWithRelationInput | Prisma.wp_usersOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing wp_users.
   */
  cursor?: Prisma.wp_usersWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_users.
   */
  skip?: number
  distinct?: Prisma.Wp_usersScalarFieldEnum | Prisma.Wp_usersScalarFieldEnum[]
}

/**
 * wp_users create
 */
export type wp_usersCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * The data needed to create a wp_users.
   */
  data?: Prisma.XOR<Prisma.wp_usersCreateInput, Prisma.wp_usersUncheckedCreateInput>
}

/**
 * wp_users createMany
 */
export type wp_usersCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many wp_users.
   */
  data: Prisma.wp_usersCreateManyInput | Prisma.wp_usersCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wp_users createManyAndReturn
 */
export type wp_usersCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * The data used to create many wp_users.
   */
  data: Prisma.wp_usersCreateManyInput | Prisma.wp_usersCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wp_users update
 */
export type wp_usersUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * The data needed to update a wp_users.
   */
  data: Prisma.XOR<Prisma.wp_usersUpdateInput, Prisma.wp_usersUncheckedUpdateInput>
  /**
   * Choose, which wp_users to update.
   */
  where: Prisma.wp_usersWhereUniqueInput
}

/**
 * wp_users updateMany
 */
export type wp_usersUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update wp_users.
   */
  data: Prisma.XOR<Prisma.wp_usersUpdateManyMutationInput, Prisma.wp_usersUncheckedUpdateManyInput>
  /**
   * Filter which wp_users to update
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * Limit how many wp_users to update.
   */
  limit?: number
}

/**
 * wp_users updateManyAndReturn
 */
export type wp_usersUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * The data used to update wp_users.
   */
  data: Prisma.XOR<Prisma.wp_usersUpdateManyMutationInput, Prisma.wp_usersUncheckedUpdateManyInput>
  /**
   * Filter which wp_users to update
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * Limit how many wp_users to update.
   */
  limit?: number
}

/**
 * wp_users upsert
 */
export type wp_usersUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * The filter to search for the wp_users to update in case it exists.
   */
  where: Prisma.wp_usersWhereUniqueInput
  /**
   * In case the wp_users found by the `where` argument doesn't exist, create a new wp_users with this data.
   */
  create: Prisma.XOR<Prisma.wp_usersCreateInput, Prisma.wp_usersUncheckedCreateInput>
  /**
   * In case the wp_users was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.wp_usersUpdateInput, Prisma.wp_usersUncheckedUpdateInput>
}

/**
 * wp_users delete
 */
export type wp_usersDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
  /**
   * Filter which wp_users to delete.
   */
  where: Prisma.wp_usersWhereUniqueInput
}

/**
 * wp_users deleteMany
 */
export type wp_usersDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wp_users to delete
   */
  where?: Prisma.wp_usersWhereInput
  /**
   * Limit how many wp_users to delete.
   */
  limit?: number
}

/**
 * wp_users without action
 */
export type wp_usersDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_users
   */
  select?: Prisma.wp_usersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_users
   */
  omit?: Prisma.wp_usersOmit<ExtArgs> | null
}
