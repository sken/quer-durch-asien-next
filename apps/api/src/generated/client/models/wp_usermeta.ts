
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `wp_usermeta` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model wp_usermeta
 * 
 */
export type wp_usermetaModel = runtime.Types.Result.DefaultSelection<Prisma.$wp_usermetaPayload>

export type AggregateWp_usermeta = {
  _count: Wp_usermetaCountAggregateOutputType | null
  _avg: Wp_usermetaAvgAggregateOutputType | null
  _sum: Wp_usermetaSumAggregateOutputType | null
  _min: Wp_usermetaMinAggregateOutputType | null
  _max: Wp_usermetaMaxAggregateOutputType | null
}

export type Wp_usermetaAvgAggregateOutputType = {
  umeta_id: number | null
  user_id: runtime.Decimal | null
}

export type Wp_usermetaSumAggregateOutputType = {
  umeta_id: bigint | null
  user_id: runtime.Decimal | null
}

export type Wp_usermetaMinAggregateOutputType = {
  umeta_id: bigint | null
  user_id: runtime.Decimal | null
  meta_key: string | null
  meta_value: string | null
}

export type Wp_usermetaMaxAggregateOutputType = {
  umeta_id: bigint | null
  user_id: runtime.Decimal | null
  meta_key: string | null
  meta_value: string | null
}

export type Wp_usermetaCountAggregateOutputType = {
  umeta_id: number
  user_id: number
  meta_key: number
  meta_value: number
  _all: number
}


export type Wp_usermetaAvgAggregateInputType = {
  umeta_id?: true
  user_id?: true
}

export type Wp_usermetaSumAggregateInputType = {
  umeta_id?: true
  user_id?: true
}

export type Wp_usermetaMinAggregateInputType = {
  umeta_id?: true
  user_id?: true
  meta_key?: true
  meta_value?: true
}

export type Wp_usermetaMaxAggregateInputType = {
  umeta_id?: true
  user_id?: true
  meta_key?: true
  meta_value?: true
}

export type Wp_usermetaCountAggregateInputType = {
  umeta_id?: true
  user_id?: true
  meta_key?: true
  meta_value?: true
  _all?: true
}

export type Wp_usermetaAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wp_usermeta to aggregate.
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_usermetas to fetch.
   */
  orderBy?: Prisma.wp_usermetaOrderByWithRelationInput | Prisma.wp_usermetaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.wp_usermetaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_usermetas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_usermetas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned wp_usermetas
  **/
  _count?: true | Wp_usermetaCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Wp_usermetaAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Wp_usermetaSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Wp_usermetaMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Wp_usermetaMaxAggregateInputType
}

export type GetWp_usermetaAggregateType<T extends Wp_usermetaAggregateArgs> = {
      [P in keyof T & keyof AggregateWp_usermeta]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWp_usermeta[P]>
    : Prisma.GetScalarType<T[P], AggregateWp_usermeta[P]>
}




export type wp_usermetaGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.wp_usermetaWhereInput
  orderBy?: Prisma.wp_usermetaOrderByWithAggregationInput | Prisma.wp_usermetaOrderByWithAggregationInput[]
  by: Prisma.Wp_usermetaScalarFieldEnum[] | Prisma.Wp_usermetaScalarFieldEnum
  having?: Prisma.wp_usermetaScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Wp_usermetaCountAggregateInputType | true
  _avg?: Wp_usermetaAvgAggregateInputType
  _sum?: Wp_usermetaSumAggregateInputType
  _min?: Wp_usermetaMinAggregateInputType
  _max?: Wp_usermetaMaxAggregateInputType
}

export type Wp_usermetaGroupByOutputType = {
  umeta_id: bigint
  user_id: runtime.Decimal
  meta_key: string | null
  meta_value: string | null
  _count: Wp_usermetaCountAggregateOutputType | null
  _avg: Wp_usermetaAvgAggregateOutputType | null
  _sum: Wp_usermetaSumAggregateOutputType | null
  _min: Wp_usermetaMinAggregateOutputType | null
  _max: Wp_usermetaMaxAggregateOutputType | null
}

type GetWp_usermetaGroupByPayload<T extends wp_usermetaGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Wp_usermetaGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Wp_usermetaGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Wp_usermetaGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Wp_usermetaGroupByOutputType[P]>
      }
    >
  >



export type wp_usermetaWhereInput = {
  AND?: Prisma.wp_usermetaWhereInput | Prisma.wp_usermetaWhereInput[]
  OR?: Prisma.wp_usermetaWhereInput[]
  NOT?: Prisma.wp_usermetaWhereInput | Prisma.wp_usermetaWhereInput[]
  umeta_id?: Prisma.BigIntFilter<"wp_usermeta"> | bigint | number
  user_id?: Prisma.DecimalFilter<"wp_usermeta"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.StringNullableFilter<"wp_usermeta"> | string | null
  meta_value?: Prisma.StringNullableFilter<"wp_usermeta"> | string | null
}

export type wp_usermetaOrderByWithRelationInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  meta_key?: Prisma.SortOrderInput | Prisma.SortOrder
  meta_value?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type wp_usermetaWhereUniqueInput = Prisma.AtLeast<{
  umeta_id?: bigint | number
  AND?: Prisma.wp_usermetaWhereInput | Prisma.wp_usermetaWhereInput[]
  OR?: Prisma.wp_usermetaWhereInput[]
  NOT?: Prisma.wp_usermetaWhereInput | Prisma.wp_usermetaWhereInput[]
  user_id?: Prisma.DecimalFilter<"wp_usermeta"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.StringNullableFilter<"wp_usermeta"> | string | null
  meta_value?: Prisma.StringNullableFilter<"wp_usermeta"> | string | null
}, "umeta_id">

export type wp_usermetaOrderByWithAggregationInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  meta_key?: Prisma.SortOrderInput | Prisma.SortOrder
  meta_value?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.wp_usermetaCountOrderByAggregateInput
  _avg?: Prisma.wp_usermetaAvgOrderByAggregateInput
  _max?: Prisma.wp_usermetaMaxOrderByAggregateInput
  _min?: Prisma.wp_usermetaMinOrderByAggregateInput
  _sum?: Prisma.wp_usermetaSumOrderByAggregateInput
}

export type wp_usermetaScalarWhereWithAggregatesInput = {
  AND?: Prisma.wp_usermetaScalarWhereWithAggregatesInput | Prisma.wp_usermetaScalarWhereWithAggregatesInput[]
  OR?: Prisma.wp_usermetaScalarWhereWithAggregatesInput[]
  NOT?: Prisma.wp_usermetaScalarWhereWithAggregatesInput | Prisma.wp_usermetaScalarWhereWithAggregatesInput[]
  umeta_id?: Prisma.BigIntWithAggregatesFilter<"wp_usermeta"> | bigint | number
  user_id?: Prisma.DecimalWithAggregatesFilter<"wp_usermeta"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.StringNullableWithAggregatesFilter<"wp_usermeta"> | string | null
  meta_value?: Prisma.StringNullableWithAggregatesFilter<"wp_usermeta"> | string | null
}

export type wp_usermetaCreateInput = {
  umeta_id?: bigint | number
  user_id?: runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: string | null
  meta_value?: string | null
}

export type wp_usermetaUncheckedCreateInput = {
  umeta_id?: bigint | number
  user_id?: runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: string | null
  meta_value?: string | null
}

export type wp_usermetaUpdateInput = {
  umeta_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta_value?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type wp_usermetaUncheckedUpdateInput = {
  umeta_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta_value?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type wp_usermetaCreateManyInput = {
  umeta_id?: bigint | number
  user_id?: runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: string | null
  meta_value?: string | null
}

export type wp_usermetaUpdateManyMutationInput = {
  umeta_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta_value?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type wp_usermetaUncheckedUpdateManyInput = {
  umeta_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  user_id?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  meta_key?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  meta_value?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type wp_usermetaCountOrderByAggregateInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  meta_key?: Prisma.SortOrder
  meta_value?: Prisma.SortOrder
}

export type wp_usermetaAvgOrderByAggregateInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type wp_usermetaMaxOrderByAggregateInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  meta_key?: Prisma.SortOrder
  meta_value?: Prisma.SortOrder
}

export type wp_usermetaMinOrderByAggregateInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  meta_key?: Prisma.SortOrder
  meta_value?: Prisma.SortOrder
}

export type wp_usermetaSumOrderByAggregateInput = {
  umeta_id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}



export type wp_usermetaSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  umeta_id?: boolean
  user_id?: boolean
  meta_key?: boolean
  meta_value?: boolean
}, ExtArgs["result"]["wp_usermeta"]>

export type wp_usermetaSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  umeta_id?: boolean
  user_id?: boolean
  meta_key?: boolean
  meta_value?: boolean
}, ExtArgs["result"]["wp_usermeta"]>

export type wp_usermetaSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  umeta_id?: boolean
  user_id?: boolean
  meta_key?: boolean
  meta_value?: boolean
}, ExtArgs["result"]["wp_usermeta"]>

export type wp_usermetaSelectScalar = {
  umeta_id?: boolean
  user_id?: boolean
  meta_key?: boolean
  meta_value?: boolean
}

export type wp_usermetaOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"umeta_id" | "user_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_usermeta"]>

export type $wp_usermetaPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "wp_usermeta"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    umeta_id: bigint
    user_id: runtime.Decimal
    meta_key: string | null
    meta_value: string | null
  }, ExtArgs["result"]["wp_usermeta"]>
  composites: {}
}

export type wp_usermetaGetPayload<S extends boolean | null | undefined | wp_usermetaDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload, S>

export type wp_usermetaCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<wp_usermetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Wp_usermetaCountAggregateInputType | true
  }

export interface wp_usermetaDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_usermeta'], meta: { name: 'wp_usermeta' } }
  /**
   * Find zero or one Wp_usermeta that matches the filter.
   * @param {wp_usermetaFindUniqueArgs} args - Arguments to find a Wp_usermeta
   * @example
   * // Get one Wp_usermeta
   * const wp_usermeta = await prisma.wp_usermeta.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends wp_usermetaFindUniqueArgs>(args: Prisma.SelectSubset<T, wp_usermetaFindUniqueArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Wp_usermeta that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {wp_usermetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_usermeta
   * @example
   * // Get one Wp_usermeta
   * const wp_usermeta = await prisma.wp_usermeta.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends wp_usermetaFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, wp_usermetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wp_usermeta that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usermetaFindFirstArgs} args - Arguments to find a Wp_usermeta
   * @example
   * // Get one Wp_usermeta
   * const wp_usermeta = await prisma.wp_usermeta.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends wp_usermetaFindFirstArgs>(args?: Prisma.SelectSubset<T, wp_usermetaFindFirstArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wp_usermeta that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usermetaFindFirstOrThrowArgs} args - Arguments to find a Wp_usermeta
   * @example
   * // Get one Wp_usermeta
   * const wp_usermeta = await prisma.wp_usermeta.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends wp_usermetaFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, wp_usermetaFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Wp_usermetas that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usermetaFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Wp_usermetas
   * const wp_usermetas = await prisma.wp_usermeta.findMany()
   * 
   * // Get first 10 Wp_usermetas
   * const wp_usermetas = await prisma.wp_usermeta.findMany({ take: 10 })
   * 
   * // Only select the `umeta_id`
   * const wp_usermetaWithUmeta_idOnly = await prisma.wp_usermeta.findMany({ select: { umeta_id: true } })
   * 
   */
  findMany<T extends wp_usermetaFindManyArgs>(args?: Prisma.SelectSubset<T, wp_usermetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Wp_usermeta.
   * @param {wp_usermetaCreateArgs} args - Arguments to create a Wp_usermeta.
   * @example
   * // Create one Wp_usermeta
   * const Wp_usermeta = await prisma.wp_usermeta.create({
   *   data: {
   *     // ... data to create a Wp_usermeta
   *   }
   * })
   * 
   */
  create<T extends wp_usermetaCreateArgs>(args: Prisma.SelectSubset<T, wp_usermetaCreateArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Wp_usermetas.
   * @param {wp_usermetaCreateManyArgs} args - Arguments to create many Wp_usermetas.
   * @example
   * // Create many Wp_usermetas
   * const wp_usermeta = await prisma.wp_usermeta.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends wp_usermetaCreateManyArgs>(args?: Prisma.SelectSubset<T, wp_usermetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Wp_usermetas and returns the data saved in the database.
   * @param {wp_usermetaCreateManyAndReturnArgs} args - Arguments to create many Wp_usermetas.
   * @example
   * // Create many Wp_usermetas
   * const wp_usermeta = await prisma.wp_usermeta.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Wp_usermetas and only return the `umeta_id`
   * const wp_usermetaWithUmeta_idOnly = await prisma.wp_usermeta.createManyAndReturn({
   *   select: { umeta_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends wp_usermetaCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, wp_usermetaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Wp_usermeta.
   * @param {wp_usermetaDeleteArgs} args - Arguments to delete one Wp_usermeta.
   * @example
   * // Delete one Wp_usermeta
   * const Wp_usermeta = await prisma.wp_usermeta.delete({
   *   where: {
   *     // ... filter to delete one Wp_usermeta
   *   }
   * })
   * 
   */
  delete<T extends wp_usermetaDeleteArgs>(args: Prisma.SelectSubset<T, wp_usermetaDeleteArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Wp_usermeta.
   * @param {wp_usermetaUpdateArgs} args - Arguments to update one Wp_usermeta.
   * @example
   * // Update one Wp_usermeta
   * const wp_usermeta = await prisma.wp_usermeta.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends wp_usermetaUpdateArgs>(args: Prisma.SelectSubset<T, wp_usermetaUpdateArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Wp_usermetas.
   * @param {wp_usermetaDeleteManyArgs} args - Arguments to filter Wp_usermetas to delete.
   * @example
   * // Delete a few Wp_usermetas
   * const { count } = await prisma.wp_usermeta.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends wp_usermetaDeleteManyArgs>(args?: Prisma.SelectSubset<T, wp_usermetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wp_usermetas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usermetaUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Wp_usermetas
   * const wp_usermeta = await prisma.wp_usermeta.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends wp_usermetaUpdateManyArgs>(args: Prisma.SelectSubset<T, wp_usermetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wp_usermetas and returns the data updated in the database.
   * @param {wp_usermetaUpdateManyAndReturnArgs} args - Arguments to update many Wp_usermetas.
   * @example
   * // Update many Wp_usermetas
   * const wp_usermeta = await prisma.wp_usermeta.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Wp_usermetas and only return the `umeta_id`
   * const wp_usermetaWithUmeta_idOnly = await prisma.wp_usermeta.updateManyAndReturn({
   *   select: { umeta_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends wp_usermetaUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, wp_usermetaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Wp_usermeta.
   * @param {wp_usermetaUpsertArgs} args - Arguments to update or create a Wp_usermeta.
   * @example
   * // Update or create a Wp_usermeta
   * const wp_usermeta = await prisma.wp_usermeta.upsert({
   *   create: {
   *     // ... data to create a Wp_usermeta
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Wp_usermeta we want to update
   *   }
   * })
   */
  upsert<T extends wp_usermetaUpsertArgs>(args: Prisma.SelectSubset<T, wp_usermetaUpsertArgs<ExtArgs>>): Prisma.Prisma__wp_usermetaClient<runtime.Types.Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Wp_usermetas.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usermetaCountArgs} args - Arguments to filter Wp_usermetas to count.
   * @example
   * // Count the number of Wp_usermetas
   * const count = await prisma.wp_usermeta.count({
   *   where: {
   *     // ... the filter for the Wp_usermetas we want to count
   *   }
   * })
  **/
  count<T extends wp_usermetaCountArgs>(
    args?: Prisma.Subset<T, wp_usermetaCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Wp_usermetaCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Wp_usermeta.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Wp_usermetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Wp_usermetaAggregateArgs>(args: Prisma.Subset<T, Wp_usermetaAggregateArgs>): Prisma.PrismaPromise<GetWp_usermetaAggregateType<T>>

  /**
   * Group by Wp_usermeta.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_usermetaGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends wp_usermetaGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: wp_usermetaGroupByArgs['orderBy'] }
      : { orderBy?: wp_usermetaGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, wp_usermetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_usermetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the wp_usermeta model
 */
readonly fields: wp_usermetaFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for wp_usermeta.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__wp_usermetaClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the wp_usermeta model
 */
export interface wp_usermetaFieldRefs {
  readonly umeta_id: Prisma.FieldRef<"wp_usermeta", 'BigInt'>
  readonly user_id: Prisma.FieldRef<"wp_usermeta", 'Decimal'>
  readonly meta_key: Prisma.FieldRef<"wp_usermeta", 'String'>
  readonly meta_value: Prisma.FieldRef<"wp_usermeta", 'String'>
}
    

// Custom InputTypes
/**
 * wp_usermeta findUnique
 */
export type wp_usermetaFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * Filter, which wp_usermeta to fetch.
   */
  where: Prisma.wp_usermetaWhereUniqueInput
}

/**
 * wp_usermeta findUniqueOrThrow
 */
export type wp_usermetaFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * Filter, which wp_usermeta to fetch.
   */
  where: Prisma.wp_usermetaWhereUniqueInput
}

/**
 * wp_usermeta findFirst
 */
export type wp_usermetaFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * Filter, which wp_usermeta to fetch.
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_usermetas to fetch.
   */
  orderBy?: Prisma.wp_usermetaOrderByWithRelationInput | Prisma.wp_usermetaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wp_usermetas.
   */
  cursor?: Prisma.wp_usermetaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_usermetas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_usermetas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wp_usermetas.
   */
  distinct?: Prisma.Wp_usermetaScalarFieldEnum | Prisma.Wp_usermetaScalarFieldEnum[]
}

/**
 * wp_usermeta findFirstOrThrow
 */
export type wp_usermetaFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * Filter, which wp_usermeta to fetch.
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_usermetas to fetch.
   */
  orderBy?: Prisma.wp_usermetaOrderByWithRelationInput | Prisma.wp_usermetaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wp_usermetas.
   */
  cursor?: Prisma.wp_usermetaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_usermetas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_usermetas.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wp_usermetas.
   */
  distinct?: Prisma.Wp_usermetaScalarFieldEnum | Prisma.Wp_usermetaScalarFieldEnum[]
}

/**
 * wp_usermeta findMany
 */
export type wp_usermetaFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * Filter, which wp_usermetas to fetch.
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_usermetas to fetch.
   */
  orderBy?: Prisma.wp_usermetaOrderByWithRelationInput | Prisma.wp_usermetaOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing wp_usermetas.
   */
  cursor?: Prisma.wp_usermetaWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_usermetas from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_usermetas.
   */
  skip?: number
  distinct?: Prisma.Wp_usermetaScalarFieldEnum | Prisma.Wp_usermetaScalarFieldEnum[]
}

/**
 * wp_usermeta create
 */
export type wp_usermetaCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * The data needed to create a wp_usermeta.
   */
  data?: Prisma.XOR<Prisma.wp_usermetaCreateInput, Prisma.wp_usermetaUncheckedCreateInput>
}

/**
 * wp_usermeta createMany
 */
export type wp_usermetaCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many wp_usermetas.
   */
  data: Prisma.wp_usermetaCreateManyInput | Prisma.wp_usermetaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wp_usermeta createManyAndReturn
 */
export type wp_usermetaCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * The data used to create many wp_usermetas.
   */
  data: Prisma.wp_usermetaCreateManyInput | Prisma.wp_usermetaCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wp_usermeta update
 */
export type wp_usermetaUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * The data needed to update a wp_usermeta.
   */
  data: Prisma.XOR<Prisma.wp_usermetaUpdateInput, Prisma.wp_usermetaUncheckedUpdateInput>
  /**
   * Choose, which wp_usermeta to update.
   */
  where: Prisma.wp_usermetaWhereUniqueInput
}

/**
 * wp_usermeta updateMany
 */
export type wp_usermetaUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update wp_usermetas.
   */
  data: Prisma.XOR<Prisma.wp_usermetaUpdateManyMutationInput, Prisma.wp_usermetaUncheckedUpdateManyInput>
  /**
   * Filter which wp_usermetas to update
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * Limit how many wp_usermetas to update.
   */
  limit?: number
}

/**
 * wp_usermeta updateManyAndReturn
 */
export type wp_usermetaUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * The data used to update wp_usermetas.
   */
  data: Prisma.XOR<Prisma.wp_usermetaUpdateManyMutationInput, Prisma.wp_usermetaUncheckedUpdateManyInput>
  /**
   * Filter which wp_usermetas to update
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * Limit how many wp_usermetas to update.
   */
  limit?: number
}

/**
 * wp_usermeta upsert
 */
export type wp_usermetaUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * The filter to search for the wp_usermeta to update in case it exists.
   */
  where: Prisma.wp_usermetaWhereUniqueInput
  /**
   * In case the wp_usermeta found by the `where` argument doesn't exist, create a new wp_usermeta with this data.
   */
  create: Prisma.XOR<Prisma.wp_usermetaCreateInput, Prisma.wp_usermetaUncheckedCreateInput>
  /**
   * In case the wp_usermeta was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.wp_usermetaUpdateInput, Prisma.wp_usermetaUncheckedUpdateInput>
}

/**
 * wp_usermeta delete
 */
export type wp_usermetaDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
  /**
   * Filter which wp_usermeta to delete.
   */
  where: Prisma.wp_usermetaWhereUniqueInput
}

/**
 * wp_usermeta deleteMany
 */
export type wp_usermetaDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wp_usermetas to delete
   */
  where?: Prisma.wp_usermetaWhereInput
  /**
   * Limit how many wp_usermetas to delete.
   */
  limit?: number
}

/**
 * wp_usermeta without action
 */
export type wp_usermetaDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_usermeta
   */
  select?: Prisma.wp_usermetaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_usermeta
   */
  omit?: Prisma.wp_usermetaOmit<ExtArgs> | null
}
