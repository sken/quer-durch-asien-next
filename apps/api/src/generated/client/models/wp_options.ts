
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `wp_options` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model wp_options
 * 
 */
export type wp_optionsModel = runtime.Types.Result.DefaultSelection<Prisma.$wp_optionsPayload>

export type AggregateWp_options = {
  _count: Wp_optionsCountAggregateOutputType | null
  _avg: Wp_optionsAvgAggregateOutputType | null
  _sum: Wp_optionsSumAggregateOutputType | null
  _min: Wp_optionsMinAggregateOutputType | null
  _max: Wp_optionsMaxAggregateOutputType | null
}

export type Wp_optionsAvgAggregateOutputType = {
  option_id: number | null
  blog_id: number | null
}

export type Wp_optionsSumAggregateOutputType = {
  option_id: bigint | null
  blog_id: bigint | null
}

export type Wp_optionsMinAggregateOutputType = {
  option_id: bigint | null
  blog_id: bigint | null
  option_name: string | null
  option_value: string | null
  autoload: string | null
}

export type Wp_optionsMaxAggregateOutputType = {
  option_id: bigint | null
  blog_id: bigint | null
  option_name: string | null
  option_value: string | null
  autoload: string | null
}

export type Wp_optionsCountAggregateOutputType = {
  option_id: number
  blog_id: number
  option_name: number
  option_value: number
  autoload: number
  _all: number
}


export type Wp_optionsAvgAggregateInputType = {
  option_id?: true
  blog_id?: true
}

export type Wp_optionsSumAggregateInputType = {
  option_id?: true
  blog_id?: true
}

export type Wp_optionsMinAggregateInputType = {
  option_id?: true
  blog_id?: true
  option_name?: true
  option_value?: true
  autoload?: true
}

export type Wp_optionsMaxAggregateInputType = {
  option_id?: true
  blog_id?: true
  option_name?: true
  option_value?: true
  autoload?: true
}

export type Wp_optionsCountAggregateInputType = {
  option_id?: true
  blog_id?: true
  option_name?: true
  option_value?: true
  autoload?: true
  _all?: true
}

export type Wp_optionsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wp_options to aggregate.
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_options to fetch.
   */
  orderBy?: Prisma.wp_optionsOrderByWithRelationInput | Prisma.wp_optionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.wp_optionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_options from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_options.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned wp_options
  **/
  _count?: true | Wp_optionsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Wp_optionsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Wp_optionsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Wp_optionsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Wp_optionsMaxAggregateInputType
}

export type GetWp_optionsAggregateType<T extends Wp_optionsAggregateArgs> = {
      [P in keyof T & keyof AggregateWp_options]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWp_options[P]>
    : Prisma.GetScalarType<T[P], AggregateWp_options[P]>
}




export type wp_optionsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.wp_optionsWhereInput
  orderBy?: Prisma.wp_optionsOrderByWithAggregationInput | Prisma.wp_optionsOrderByWithAggregationInput[]
  by: Prisma.Wp_optionsScalarFieldEnum[] | Prisma.Wp_optionsScalarFieldEnum
  having?: Prisma.wp_optionsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Wp_optionsCountAggregateInputType | true
  _avg?: Wp_optionsAvgAggregateInputType
  _sum?: Wp_optionsSumAggregateInputType
  _min?: Wp_optionsMinAggregateInputType
  _max?: Wp_optionsMaxAggregateInputType
}

export type Wp_optionsGroupByOutputType = {
  option_id: bigint
  blog_id: bigint
  option_name: string
  option_value: string
  autoload: string
  _count: Wp_optionsCountAggregateOutputType | null
  _avg: Wp_optionsAvgAggregateOutputType | null
  _sum: Wp_optionsSumAggregateOutputType | null
  _min: Wp_optionsMinAggregateOutputType | null
  _max: Wp_optionsMaxAggregateOutputType | null
}

type GetWp_optionsGroupByPayload<T extends wp_optionsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Wp_optionsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Wp_optionsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Wp_optionsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Wp_optionsGroupByOutputType[P]>
      }
    >
  >



export type wp_optionsWhereInput = {
  AND?: Prisma.wp_optionsWhereInput | Prisma.wp_optionsWhereInput[]
  OR?: Prisma.wp_optionsWhereInput[]
  NOT?: Prisma.wp_optionsWhereInput | Prisma.wp_optionsWhereInput[]
  option_id?: Prisma.BigIntFilter<"wp_options"> | bigint | number
  blog_id?: Prisma.BigIntFilter<"wp_options"> | bigint | number
  option_name?: Prisma.StringFilter<"wp_options"> | string
  option_value?: Prisma.StringFilter<"wp_options"> | string
  autoload?: Prisma.StringFilter<"wp_options"> | string
}

export type wp_optionsOrderByWithRelationInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
  option_name?: Prisma.SortOrder
  option_value?: Prisma.SortOrder
  autoload?: Prisma.SortOrder
}

export type wp_optionsWhereUniqueInput = Prisma.AtLeast<{
  option_id?: bigint | number
  option_name?: string
  AND?: Prisma.wp_optionsWhereInput | Prisma.wp_optionsWhereInput[]
  OR?: Prisma.wp_optionsWhereInput[]
  NOT?: Prisma.wp_optionsWhereInput | Prisma.wp_optionsWhereInput[]
  blog_id?: Prisma.BigIntFilter<"wp_options"> | bigint | number
  option_value?: Prisma.StringFilter<"wp_options"> | string
  autoload?: Prisma.StringFilter<"wp_options"> | string
}, "option_id" | "option_name">

export type wp_optionsOrderByWithAggregationInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
  option_name?: Prisma.SortOrder
  option_value?: Prisma.SortOrder
  autoload?: Prisma.SortOrder
  _count?: Prisma.wp_optionsCountOrderByAggregateInput
  _avg?: Prisma.wp_optionsAvgOrderByAggregateInput
  _max?: Prisma.wp_optionsMaxOrderByAggregateInput
  _min?: Prisma.wp_optionsMinOrderByAggregateInput
  _sum?: Prisma.wp_optionsSumOrderByAggregateInput
}

export type wp_optionsScalarWhereWithAggregatesInput = {
  AND?: Prisma.wp_optionsScalarWhereWithAggregatesInput | Prisma.wp_optionsScalarWhereWithAggregatesInput[]
  OR?: Prisma.wp_optionsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.wp_optionsScalarWhereWithAggregatesInput | Prisma.wp_optionsScalarWhereWithAggregatesInput[]
  option_id?: Prisma.BigIntWithAggregatesFilter<"wp_options"> | bigint | number
  blog_id?: Prisma.BigIntWithAggregatesFilter<"wp_options"> | bigint | number
  option_name?: Prisma.StringWithAggregatesFilter<"wp_options"> | string
  option_value?: Prisma.StringWithAggregatesFilter<"wp_options"> | string
  autoload?: Prisma.StringWithAggregatesFilter<"wp_options"> | string
}

export type wp_optionsCreateInput = {
  option_id?: bigint | number
  blog_id?: bigint | number
  option_name?: string
  option_value: string
  autoload?: string
}

export type wp_optionsUncheckedCreateInput = {
  option_id?: bigint | number
  blog_id?: bigint | number
  option_name?: string
  option_value: string
  autoload?: string
}

export type wp_optionsUpdateInput = {
  option_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  blog_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  option_name?: Prisma.StringFieldUpdateOperationsInput | string
  option_value?: Prisma.StringFieldUpdateOperationsInput | string
  autoload?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_optionsUncheckedUpdateInput = {
  option_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  blog_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  option_name?: Prisma.StringFieldUpdateOperationsInput | string
  option_value?: Prisma.StringFieldUpdateOperationsInput | string
  autoload?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_optionsCreateManyInput = {
  option_id?: bigint | number
  blog_id?: bigint | number
  option_name?: string
  option_value: string
  autoload?: string
}

export type wp_optionsUpdateManyMutationInput = {
  option_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  blog_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  option_name?: Prisma.StringFieldUpdateOperationsInput | string
  option_value?: Prisma.StringFieldUpdateOperationsInput | string
  autoload?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_optionsUncheckedUpdateManyInput = {
  option_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  blog_id?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  option_name?: Prisma.StringFieldUpdateOperationsInput | string
  option_value?: Prisma.StringFieldUpdateOperationsInput | string
  autoload?: Prisma.StringFieldUpdateOperationsInput | string
}

export type wp_optionsCountOrderByAggregateInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
  option_name?: Prisma.SortOrder
  option_value?: Prisma.SortOrder
  autoload?: Prisma.SortOrder
}

export type wp_optionsAvgOrderByAggregateInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
}

export type wp_optionsMaxOrderByAggregateInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
  option_name?: Prisma.SortOrder
  option_value?: Prisma.SortOrder
  autoload?: Prisma.SortOrder
}

export type wp_optionsMinOrderByAggregateInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
  option_name?: Prisma.SortOrder
  option_value?: Prisma.SortOrder
  autoload?: Prisma.SortOrder
}

export type wp_optionsSumOrderByAggregateInput = {
  option_id?: Prisma.SortOrder
  blog_id?: Prisma.SortOrder
}



export type wp_optionsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  option_id?: boolean
  blog_id?: boolean
  option_name?: boolean
  option_value?: boolean
  autoload?: boolean
}, ExtArgs["result"]["wp_options"]>

export type wp_optionsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  option_id?: boolean
  blog_id?: boolean
  option_name?: boolean
  option_value?: boolean
  autoload?: boolean
}, ExtArgs["result"]["wp_options"]>

export type wp_optionsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  option_id?: boolean
  blog_id?: boolean
  option_name?: boolean
  option_value?: boolean
  autoload?: boolean
}, ExtArgs["result"]["wp_options"]>

export type wp_optionsSelectScalar = {
  option_id?: boolean
  blog_id?: boolean
  option_name?: boolean
  option_value?: boolean
  autoload?: boolean
}

export type wp_optionsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"option_id" | "blog_id" | "option_name" | "option_value" | "autoload", ExtArgs["result"]["wp_options"]>

export type $wp_optionsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "wp_options"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    option_id: bigint
    blog_id: bigint
    option_name: string
    option_value: string
    autoload: string
  }, ExtArgs["result"]["wp_options"]>
  composites: {}
}

export type wp_optionsGetPayload<S extends boolean | null | undefined | wp_optionsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload, S>

export type wp_optionsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<wp_optionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Wp_optionsCountAggregateInputType | true
  }

export interface wp_optionsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_options'], meta: { name: 'wp_options' } }
  /**
   * Find zero or one Wp_options that matches the filter.
   * @param {wp_optionsFindUniqueArgs} args - Arguments to find a Wp_options
   * @example
   * // Get one Wp_options
   * const wp_options = await prisma.wp_options.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends wp_optionsFindUniqueArgs>(args: Prisma.SelectSubset<T, wp_optionsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Wp_options that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {wp_optionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_options
   * @example
   * // Get one Wp_options
   * const wp_options = await prisma.wp_options.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends wp_optionsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, wp_optionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wp_options that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_optionsFindFirstArgs} args - Arguments to find a Wp_options
   * @example
   * // Get one Wp_options
   * const wp_options = await prisma.wp_options.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends wp_optionsFindFirstArgs>(args?: Prisma.SelectSubset<T, wp_optionsFindFirstArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wp_options that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_optionsFindFirstOrThrowArgs} args - Arguments to find a Wp_options
   * @example
   * // Get one Wp_options
   * const wp_options = await prisma.wp_options.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends wp_optionsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, wp_optionsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Wp_options that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_optionsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Wp_options
   * const wp_options = await prisma.wp_options.findMany()
   * 
   * // Get first 10 Wp_options
   * const wp_options = await prisma.wp_options.findMany({ take: 10 })
   * 
   * // Only select the `option_id`
   * const wp_optionsWithOption_idOnly = await prisma.wp_options.findMany({ select: { option_id: true } })
   * 
   */
  findMany<T extends wp_optionsFindManyArgs>(args?: Prisma.SelectSubset<T, wp_optionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Wp_options.
   * @param {wp_optionsCreateArgs} args - Arguments to create a Wp_options.
   * @example
   * // Create one Wp_options
   * const Wp_options = await prisma.wp_options.create({
   *   data: {
   *     // ... data to create a Wp_options
   *   }
   * })
   * 
   */
  create<T extends wp_optionsCreateArgs>(args: Prisma.SelectSubset<T, wp_optionsCreateArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Wp_options.
   * @param {wp_optionsCreateManyArgs} args - Arguments to create many Wp_options.
   * @example
   * // Create many Wp_options
   * const wp_options = await prisma.wp_options.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends wp_optionsCreateManyArgs>(args?: Prisma.SelectSubset<T, wp_optionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Wp_options and returns the data saved in the database.
   * @param {wp_optionsCreateManyAndReturnArgs} args - Arguments to create many Wp_options.
   * @example
   * // Create many Wp_options
   * const wp_options = await prisma.wp_options.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Wp_options and only return the `option_id`
   * const wp_optionsWithOption_idOnly = await prisma.wp_options.createManyAndReturn({
   *   select: { option_id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends wp_optionsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, wp_optionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Wp_options.
   * @param {wp_optionsDeleteArgs} args - Arguments to delete one Wp_options.
   * @example
   * // Delete one Wp_options
   * const Wp_options = await prisma.wp_options.delete({
   *   where: {
   *     // ... filter to delete one Wp_options
   *   }
   * })
   * 
   */
  delete<T extends wp_optionsDeleteArgs>(args: Prisma.SelectSubset<T, wp_optionsDeleteArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Wp_options.
   * @param {wp_optionsUpdateArgs} args - Arguments to update one Wp_options.
   * @example
   * // Update one Wp_options
   * const wp_options = await prisma.wp_options.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends wp_optionsUpdateArgs>(args: Prisma.SelectSubset<T, wp_optionsUpdateArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Wp_options.
   * @param {wp_optionsDeleteManyArgs} args - Arguments to filter Wp_options to delete.
   * @example
   * // Delete a few Wp_options
   * const { count } = await prisma.wp_options.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends wp_optionsDeleteManyArgs>(args?: Prisma.SelectSubset<T, wp_optionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wp_options.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_optionsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Wp_options
   * const wp_options = await prisma.wp_options.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends wp_optionsUpdateManyArgs>(args: Prisma.SelectSubset<T, wp_optionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wp_options and returns the data updated in the database.
   * @param {wp_optionsUpdateManyAndReturnArgs} args - Arguments to update many Wp_options.
   * @example
   * // Update many Wp_options
   * const wp_options = await prisma.wp_options.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Wp_options and only return the `option_id`
   * const wp_optionsWithOption_idOnly = await prisma.wp_options.updateManyAndReturn({
   *   select: { option_id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends wp_optionsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, wp_optionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Wp_options.
   * @param {wp_optionsUpsertArgs} args - Arguments to update or create a Wp_options.
   * @example
   * // Update or create a Wp_options
   * const wp_options = await prisma.wp_options.upsert({
   *   create: {
   *     // ... data to create a Wp_options
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Wp_options we want to update
   *   }
   * })
   */
  upsert<T extends wp_optionsUpsertArgs>(args: Prisma.SelectSubset<T, wp_optionsUpsertArgs<ExtArgs>>): Prisma.Prisma__wp_optionsClient<runtime.Types.Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Wp_options.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_optionsCountArgs} args - Arguments to filter Wp_options to count.
   * @example
   * // Count the number of Wp_options
   * const count = await prisma.wp_options.count({
   *   where: {
   *     // ... the filter for the Wp_options we want to count
   *   }
   * })
  **/
  count<T extends wp_optionsCountArgs>(
    args?: Prisma.Subset<T, wp_optionsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Wp_optionsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Wp_options.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Wp_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Wp_optionsAggregateArgs>(args: Prisma.Subset<T, Wp_optionsAggregateArgs>): Prisma.PrismaPromise<GetWp_optionsAggregateType<T>>

  /**
   * Group by Wp_options.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wp_optionsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends wp_optionsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: wp_optionsGroupByArgs['orderBy'] }
      : { orderBy?: wp_optionsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, wp_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_optionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the wp_options model
 */
readonly fields: wp_optionsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for wp_options.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__wp_optionsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the wp_options model
 */
export interface wp_optionsFieldRefs {
  readonly option_id: Prisma.FieldRef<"wp_options", 'BigInt'>
  readonly blog_id: Prisma.FieldRef<"wp_options", 'BigInt'>
  readonly option_name: Prisma.FieldRef<"wp_options", 'String'>
  readonly option_value: Prisma.FieldRef<"wp_options", 'String'>
  readonly autoload: Prisma.FieldRef<"wp_options", 'String'>
}
    

// Custom InputTypes
/**
 * wp_options findUnique
 */
export type wp_optionsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * Filter, which wp_options to fetch.
   */
  where: Prisma.wp_optionsWhereUniqueInput
}

/**
 * wp_options findUniqueOrThrow
 */
export type wp_optionsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * Filter, which wp_options to fetch.
   */
  where: Prisma.wp_optionsWhereUniqueInput
}

/**
 * wp_options findFirst
 */
export type wp_optionsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * Filter, which wp_options to fetch.
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_options to fetch.
   */
  orderBy?: Prisma.wp_optionsOrderByWithRelationInput | Prisma.wp_optionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wp_options.
   */
  cursor?: Prisma.wp_optionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_options from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_options.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wp_options.
   */
  distinct?: Prisma.Wp_optionsScalarFieldEnum | Prisma.Wp_optionsScalarFieldEnum[]
}

/**
 * wp_options findFirstOrThrow
 */
export type wp_optionsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * Filter, which wp_options to fetch.
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_options to fetch.
   */
  orderBy?: Prisma.wp_optionsOrderByWithRelationInput | Prisma.wp_optionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wp_options.
   */
  cursor?: Prisma.wp_optionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_options from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_options.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wp_options.
   */
  distinct?: Prisma.Wp_optionsScalarFieldEnum | Prisma.Wp_optionsScalarFieldEnum[]
}

/**
 * wp_options findMany
 */
export type wp_optionsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * Filter, which wp_options to fetch.
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wp_options to fetch.
   */
  orderBy?: Prisma.wp_optionsOrderByWithRelationInput | Prisma.wp_optionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing wp_options.
   */
  cursor?: Prisma.wp_optionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wp_options from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wp_options.
   */
  skip?: number
  distinct?: Prisma.Wp_optionsScalarFieldEnum | Prisma.Wp_optionsScalarFieldEnum[]
}

/**
 * wp_options create
 */
export type wp_optionsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * The data needed to create a wp_options.
   */
  data: Prisma.XOR<Prisma.wp_optionsCreateInput, Prisma.wp_optionsUncheckedCreateInput>
}

/**
 * wp_options createMany
 */
export type wp_optionsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many wp_options.
   */
  data: Prisma.wp_optionsCreateManyInput | Prisma.wp_optionsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wp_options createManyAndReturn
 */
export type wp_optionsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * The data used to create many wp_options.
   */
  data: Prisma.wp_optionsCreateManyInput | Prisma.wp_optionsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wp_options update
 */
export type wp_optionsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * The data needed to update a wp_options.
   */
  data: Prisma.XOR<Prisma.wp_optionsUpdateInput, Prisma.wp_optionsUncheckedUpdateInput>
  /**
   * Choose, which wp_options to update.
   */
  where: Prisma.wp_optionsWhereUniqueInput
}

/**
 * wp_options updateMany
 */
export type wp_optionsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update wp_options.
   */
  data: Prisma.XOR<Prisma.wp_optionsUpdateManyMutationInput, Prisma.wp_optionsUncheckedUpdateManyInput>
  /**
   * Filter which wp_options to update
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * Limit how many wp_options to update.
   */
  limit?: number
}

/**
 * wp_options updateManyAndReturn
 */
export type wp_optionsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * The data used to update wp_options.
   */
  data: Prisma.XOR<Prisma.wp_optionsUpdateManyMutationInput, Prisma.wp_optionsUncheckedUpdateManyInput>
  /**
   * Filter which wp_options to update
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * Limit how many wp_options to update.
   */
  limit?: number
}

/**
 * wp_options upsert
 */
export type wp_optionsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * The filter to search for the wp_options to update in case it exists.
   */
  where: Prisma.wp_optionsWhereUniqueInput
  /**
   * In case the wp_options found by the `where` argument doesn't exist, create a new wp_options with this data.
   */
  create: Prisma.XOR<Prisma.wp_optionsCreateInput, Prisma.wp_optionsUncheckedCreateInput>
  /**
   * In case the wp_options was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.wp_optionsUpdateInput, Prisma.wp_optionsUncheckedUpdateInput>
}

/**
 * wp_options delete
 */
export type wp_optionsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
  /**
   * Filter which wp_options to delete.
   */
  where: Prisma.wp_optionsWhereUniqueInput
}

/**
 * wp_options deleteMany
 */
export type wp_optionsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wp_options to delete
   */
  where?: Prisma.wp_optionsWhereInput
  /**
   * Limit how many wp_options to delete.
   */
  limit?: number
}

/**
 * wp_options without action
 */
export type wp_optionsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wp_options
   */
  select?: Prisma.wp_optionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wp_options
   */
  omit?: Prisma.wp_optionsOmit<ExtArgs> | null
}
